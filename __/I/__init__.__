class I
#ifnot NULL == This.is.child
  subclass Child from I

  def app_new (s) static proc
    I.Child.appnew (s;;__qualifiers);
  end

  def app_reconnect (s) static proc
    I.Child.appreconnect (s);
  end

  def app_idle () static proc
    I.Child.idle ();
  end

  def at_exit () static proc
    Sock.send_int (IChild->PARENT_WRFIFO_FD, Api->GO_ATEXIT);
  end

  def init () static proc
    I.Child.init ();
  end
#endif

#ifnot NULL == This.is.at.session
  subclass Client from I

  def app_new (s) static proc
    I.Client.appnew (s;;__qualifiers);
  end

  def app_reconnect (s) static proc
    I.Client.appreconnect (s);
  end

  def app_idle () static proc
    I.Client.idle ();
  end

  def at_exit () static proc
    Sock.send_int (IClient->SESSION_WRFIFO_FD, Api->GO_ATEXIT);
  end

  def init () static proc
    I.Client.init ();
  end
#endif

#if This.is.child == NULL == This.is.at.session
  subclass Srv from I

  def app_new (s) static proc
    I.Srv.appnew (s;;__qualifiers);
  end

  def app_reconnect (s) static proc
    I.Srv.appreconnect (s);
  end

  def app_idle () static proc
    I.Srv.idle ();
  end

  def at_exit () static proc
    variable i;
    _for i (0, length (CONNECTED_APPS) - 1)
      {
      variable app = CONNECTED_APPS[i];
      variable pid = CONNECTED_PIDS[i];
      variable s = App->APPS[app][string (pid)];
      Sock.send_int (s.fd, Api->GO_ATEXIT);
      }
  end

  def init () static proc
    I.Srv.init ();
  end
#endif
end
