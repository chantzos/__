class Env
  let ROOT_PATH      = __tmp ($0);

  let PID            = getpid ();
  let UID            = getuid ();
  let GID            = getgid ();

  let USER           = NULL;
  let GROUP          = NULL;
  let HOSTNAME       = NULL;
  let TERM           = getenv ("TERM");
  let LANG           = getenv ("LANG");
  let LD_LIBRARY_PATH = getenv ("LD_LIBRARY_PATH");
  let! DISPLAY       = getenv ("DISPLAY");
  let! XAUTHORITY    = getenv ("XAUTHORITY");
  let IS_SU_PROC     = getuid == 0;
  let SLSH_LIB_DIR   = get_slang_load_path ();
  let SLANG_MODULE_PATH = get_import_module_path ();

  let OS_PATH          = getenv ("PATH");
  let HOME_PATH        = getenv ("HOME");
  let SRC_PATH         = ROOT_PATH + "/__";
  let STD_PATH         = ROOT_PATH + "/std";
  let TMP_PATH         = ROOT_PATH + "/tmp";
  let BIN_PATH         = ROOT_PATH + "/bin";
  let USER_PATH        = ROOT_PATH + "/usr";
  let LOCAL_PATH       = ROOT_PATH + "/local";
  let PROC_FS          = TMP_PATH  + "/proc";

  let STD_APP_PATH     = STD_PATH + "/app";
  let STD_COM_PATH     = STD_PATH + "/com";
  let STD_CLASS_PATH   = STD_PATH + "/__";
  let STD_LIB_PATH     = STD_PATH + "/___";
  let STD_MACHINE_PATH = STD_PATH + "/C/" + uname.machine;
  let STD_MODULE_PATH  = STD_MACHINE_PATH + "/slang-modules";
  let STD_CLIB_PATH    = STD_MACHINE_PATH + "/lib";
  let STD_CBIN_PATH    = STD_MACHINE_PATH + "/bin";
  let STD_CSHARE_PATH  = STD_MACHINE_PATH + "/share";
  let STD_DATA_PATH    = STD_PATH + "/data";

  let USER_APP_PATH    = USER_PATH + "/app";
  let USER_COM_PATH    = USER_PATH + "/com";
  let USER_CLASS_PATH  = USER_PATH + "/__";
  let USER_LIB_PATH    = USER_PATH + "/___";
  let USER_MODULE_PATH = USER_PATH + "/C/" + uname.machine + "/slang-modules";
  let USER_CLIB_PATH   = USER_PATH + "/C/" + uname.machine + "/lib";
  let USER_DATA_PATH   = USER_PATH + "/data";

  let LOCAL_COM_PATH   = LOCAL_PATH + "/com";
  let LOCAL_APP_PATH   = LOCAL_PATH + "/app";
  let LOCAL_CLASS_PATH = LOCAL_PATH + "/__";
  let LOCAL_LIB_PATH   = LOCAL_PATH + "/___";

  let SRC_PROTO_PATH   = SRC_PATH + "/_";
  let SRC_CLASS_PATH   = SRC_PATH + "/__";
  let SRC_C_PATH       = SRC_PATH + "/C";
  let SRC_MODULE_PATH  = SRC_C_PATH + "/slang-modules";
  let SRC_INTER_PATH   = SRC_C_PATH + "/interp";
  let SRC_APP_PATH     = SRC_PATH + "/app";
  let SRC_COM_PATH     = SRC_PATH + "/com";
  let SRC_USER_PATH    = SRC_PATH + "/usr";

  let SRC_STD_DATA_PATH    = SRC_PATH + "/data";
  let SRC_STD_LIB_PATH     = SRC_PATH + "/___";

  let SRC_USER_DATA_PATH   = SRC_USER_PATH + "/data";
  let SRC_USER_COM_PATH    = SRC_USER_PATH + "/com";
  let SRC_USER_CLASS_PATH  = SRC_USER_PATH + "/__";
  let SRC_USER_C_PATH      = SRC_USER_PATH + "/C";
  let SRC_USER_MODULE_PATH = SRC_USER_C_PATH + "/slang-modules";
  let SRC_USER_INTER_PATH  = SRC_USER_C_PATH + "/interp";

  let SRC_LOCAL_PATH       = SRC_PATH + "/local";
  let SRC_LOCAL_COM_PATH   = SRC_LOCAL_PATH + "/com";
  let SRC_LOCAL_APP_PATH   = SRC_LOCAL_PATH + "/app";
  let SRC_LOCAL_CLASS_PATH = SRC_LOCAL_PATH + "/__";
  let SRC_LOCAL_LIB_PATH   = SRC_LOCAL_PATH + "/___";

  def defenv ()
    variable lenv = [
      "TERM=" + TERM,
      "PATH=" + OS_PATH,
      "LANG=" + LANG,
      "HOME=" + HOME_PATH,
      "SLANG_MODULE_PATH=" + SLANG_MODULE_PATH,
      "SLSH_LIB_DIR=" + SLSH_LIB_DIR,
      "COLUMNS=" + string (COLUMNS),
      "LINES=" + string (LINES),
      "LD_LIBRARY_PATH=" + LD_LIBRARY_PATH,
      ];

    ifnot (NULL == DISPLAY)
      lenv = [lenv, "DISPLAY=" + DISPLAY];

    ifnot (NULL == XAUTHORITY)
      lenv = [lenv, "XAUTHORITY=" + XAUTHORITY];

    lenv;
  end
end
