class Struct
  def field_exists (s, f)
    wherefirst (get_struct_field_names (s) == f);
  end

  def __to_string (s)
    variable fields = qualifier ("fields", get_struct_field_names (s));
    variable fmt = "";
    loop (length (fields))
      fmt += "%S : %%S\n";

    fmt = sprintf (fmt[[:-2]], Array.push (fields));

    sprintf (fmt, Stack.reverse (_push_struct_field_values (s), pop ()));
  end

  var level = 0;
  def to_string (s)
    level++;
    variable max_l = qualifier ("max_level", 3);
    variable buf = "";
    variable fields = get_struct_field_names (s);
    variable types = (qualifier_exists ("typeof")
        ? [Struct_Type, qualifier("typeof")]
        : [Struct_Type]);
    variable i, f, v;

    _for i (0, length (fields) - 1)
      {
      v = get_struct_field (s, fields[i]);
      f = typeof (v);
      if (any (types == f) && level <= max_l)
        buf += "\n" + fields[i] + ":" + self.to_string (v);
      }

    buf += "\n" + __to_string (NULL, s;fields = fields);
    buf;
    level--;
  end
end
